// <auto-generated />
using System;
using CoupleFinanceTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CoupleFinanceTracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250908090639_addSavingsGoalcontributions")]
    partial class addSavingsGoalcontributions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CoupleFinanceTracker.Models.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CoupleId")
                        .HasColumnType("integer");

                    b.Property<decimal>("LimitAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Month")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CoupleId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ExpenseId")
                        .HasColumnType("integer");

                    b.Property<int?>("ExpenseId1")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("ExpenseId1");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Couple", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CoupleCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Partner1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Partner2Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Couples");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsShared")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExpenseId")
                        .HasColumnType("integer");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TransactionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.RecurringExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsShared")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("RecurringExpenses");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.SavingsGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CoupleId")
                        .HasColumnType("integer");

                    b.Property<int>("CoupleId1")
                        .HasColumnType("integer");

                    b.Property<decimal>("CurrentAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TargetAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoupleId");

                    b.HasIndex("CoupleId1");

                    b.ToTable("SavingsGoals");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.SavingsGoalContribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SavingsGoalId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SavingsGoalId");

                    b.HasIndex("UserId");

                    b.ToTable("SavingsGoalContributions");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CoupleId")
                        .HasColumnType("integer");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsShared")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoupleId");

                    b.HasIndex("CreatedById");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoupleId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IncomeSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsLinkedToPartner")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoupleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Budget", b =>
                {
                    b.HasOne("CoupleFinanceTracker.Models.Couple", "Couple")
                        .WithMany("Budgets")
                        .HasForeignKey("CoupleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoupleFinanceTracker.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoupleFinanceTracker.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Couple");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Comment", b =>
                {
                    b.HasOne("CoupleFinanceTracker.Models.Expense", null)
                        .WithMany("Comments")
                        .HasForeignKey("ExpenseId");

                    b.HasOne("CoupleFinanceTracker.Models.Expense", null)
                        .WithMany()
                        .HasForeignKey("ExpenseId1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CoupleFinanceTracker.Models.Transaction", null)
                        .WithMany("Comments")
                        .HasForeignKey("TransactionId");

                    b.HasOne("CoupleFinanceTracker.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Expense", b =>
                {
                    b.HasOne("CoupleFinanceTracker.Models.User", "User")
                        .WithMany("Expenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Income", b =>
                {
                    b.HasOne("CoupleFinanceTracker.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Receipt", b =>
                {
                    b.HasOne("CoupleFinanceTracker.Models.Expense", "Expense")
                        .WithMany("Receipts")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoupleFinanceTracker.Models.Transaction", "Transaction")
                        .WithMany("Receipts")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expense");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.RecurringExpense", b =>
                {
                    b.HasOne("CoupleFinanceTracker.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoupleFinanceTracker.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.SavingsGoal", b =>
                {
                    b.HasOne("CoupleFinanceTracker.Models.Couple", null)
                        .WithMany()
                        .HasForeignKey("CoupleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoupleFinanceTracker.Models.Couple", "Couple")
                        .WithMany("SavingsGoals")
                        .HasForeignKey("CoupleId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Couple");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.SavingsGoalContribution", b =>
                {
                    b.HasOne("CoupleFinanceTracker.Models.SavingsGoal", "SavingsGoal")
                        .WithMany("Contributions")
                        .HasForeignKey("SavingsGoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoupleFinanceTracker.Models.User", null)
                        .WithMany("SavingsGoalContributions")
                        .HasForeignKey("UserId");

                    b.Navigation("SavingsGoal");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Transaction", b =>
                {
                    b.HasOne("CoupleFinanceTracker.Models.Couple", "Couple")
                        .WithMany()
                        .HasForeignKey("CoupleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoupleFinanceTracker.Models.User", "CreatedBy")
                        .WithMany("Transactions")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Couple");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.User", b =>
                {
                    b.HasOne("CoupleFinanceTracker.Models.Couple", "Couple")
                        .WithMany("Users")
                        .HasForeignKey("CoupleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Couple");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Couple", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("SavingsGoals");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Expense", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.SavingsGoal", b =>
                {
                    b.Navigation("Contributions");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.Transaction", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("CoupleFinanceTracker.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Expenses");

                    b.Navigation("SavingsGoalContributions");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
